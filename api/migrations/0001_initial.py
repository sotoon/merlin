# Generated by Django 5.0.1 on 2024-01-24 22:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="نام")),
                ("description", models.TextField(verbose_name="توضیحات")),
            ],
            options={
                "verbose_name": "دپارتمان",
                "verbose_name_plural": "دپارتمان\u200cها",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="نام")),
                (
                    "gmail",
                    models.CharField(default="", max_length=256, verbose_name="جیمیل"),
                ),
                (
                    "phone",
                    models.CharField(default="", max_length=256, verbose_name="موبایل"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "leader",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="لیدر",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="نام")),
                ("description", models.TextField(verbose_name="توضیحات")),
                (
                    "leader",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="chapter_leader",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="لیدر",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.department",
                        verbose_name="دپارتمان",
                    ),
                ),
            ],
            options={
                "verbose_name": "چپتر",
                "verbose_name_plural": "چپترها",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="chapter",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.chapter",
                verbose_name="چپتر",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="department",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.department",
                verbose_name="دپارتمان",
            ),
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("title", models.CharField(max_length=512, verbose_name="عنوان")),
                ("content", models.TextField(verbose_name="محتوا")),
                ("date", models.DateField(verbose_name="تاریخ")),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Goal", "هدف"),
                            ("Meeting", "جلسه"),
                            ("Personal", "شخصی"),
                        ],
                        default="Goal",
                        max_length=128,
                        verbose_name="نوع",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="نویسنده",
                    ),
                ),
            ],
            options={
                "verbose_name": "یادداشت",
                "verbose_name_plural": "یادداشت\u200cها",
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="نام")),
                ("description", models.TextField(verbose_name="توضیحات")),
                (
                    "department",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.department",
                        verbose_name="دپارتمان",
                    ),
                ),
                (
                    "leader",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="team_leader",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="لیدر",
                    ),
                ),
            ],
            options={
                "verbose_name": "تیم",
                "verbose_name_plural": "تیم\u200cها",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="team",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.team",
                verbose_name="تیم",
            ),
        ),
    ]
