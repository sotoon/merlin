# Generated by Django 5.0.1 on 2025-05-22 15:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0047_feedback_cycle_note_cycle_summary_cycle"),
    ]

    operations = [
        migrations.CreateModel(
            name="ValueTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name_en", models.CharField(max_length=128, unique=True)),
                ("name_fa", models.CharField(max_length=128)),
                (
                    "section",
                    models.CharField(
                        choices=[
                            ("personal", "بعد فردی"),
                            ("career", "مسیر رشد و انتظارات"),
                            ("performance", "مدیریت عملکرد"),
                            ("communication", "تعامل و مشتری\u200cمحوری"),
                        ],
                        max_length=32,
                    ),
                ),
            ],
            options={
                "verbose_name": "Behaviour Tag",
                "verbose_name_plural": "Behaviour Tags",
            },
        ),
        migrations.AlterField(
            model_name="note",
            name="type",
            field=models.CharField(
                choices=[
                    ("Goal", "هدف"),
                    ("Meeting", "جلسه"),
                    ("Personal", "شخصی"),
                    ("Task", "فعالیت"),
                    ("Proposal", "پروپوزال"),
                    ("Message", "پیام"),
                    ("Template", "قالب"),
                    ("OneOnOne", "یک\u200cبه\u200cیک"),
                ],
                default="Goal",
                max_length=128,
                verbose_name="نوع",
            ),
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                ("name", models.CharField(max_length=256, verbose_name="نام")),
                ("description", models.TextField(blank=True, verbose_name="توضیحات")),
                (
                    "ceo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_ceo",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="سی ای او",
                    ),
                ),
                (
                    "cpo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_cpo",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="سی پی او",
                    ),
                ),
                (
                    "cto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_cto",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="سی تی او",
                    ),
                ),
                (
                    "function_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_function_owner",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="فانکشن اونر",
                    ),
                ),
                (
                    "vp",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="organization_vp",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="وی پی",
                    ),
                ),
            ],
            options={
                "verbose_name": "سازمان",
                "verbose_name_plural": "سازمان\u200cها",
            },
        ),
        migrations.CreateModel(
            name="OneOnOne",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="تاریخ ساخت"
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="تاریخ بروزرسانی"
                    ),
                ),
                (
                    "personal_summary",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "career_summary",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "communication_summary",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                ("performance_summary", models.CharField(max_length=400)),
                ("actions", models.TextField()),
                (
                    "leader_vibe",
                    models.CharField(
                        blank=True,
                        choices=[(":)", "😊"), (":|", "😐"), (":(", "☹️")],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "member_vibe",
                    models.CharField(
                        blank=True,
                        choices=[(":)", "😊"), (":|", "😐"), (":(", "☹️")],
                        max_length=2,
                        null=True,
                    ),
                ),
                ("other_notes", models.TextField(blank=True, null=True)),
                (
                    "cycle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.cycle"
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="one_on_ones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "note",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="one_on_one",
                        to="api.note",
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "One-on-One",
                "verbose_name_plural": "One-on-Ones",
                "ordering": ("-date_created",),
            },
        ),
        migrations.CreateModel(
            name="OneOnOneTagLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "section",
                    models.CharField(
                        choices=[
                            ("personal", "بعد فردی"),
                            ("career", "مسیر رشد و انتظارات"),
                            ("performance", "مدیریت عملکرد"),
                            ("communication", "تعامل و مشتری\u200cمحوری"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "one_on_one",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.oneonone"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.valuetag"
                    ),
                ),
            ],
            options={
                "verbose_name": "One-on-One Tag Link",
                "verbose_name_plural": "One-on-One Tag Links",
                "unique_together": {("one_on_one", "tag", "section")},
            },
        ),
        migrations.AddField(
            model_name="oneonone",
            name="tags",
            field=models.ManyToManyField(
                related_name="one_on_one_tags",
                through="api.OneOnOneTagLink",
                to="api.valuetag",
            ),
        ),
        migrations.CreateModel(
            name="OrgValueTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.organization",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.valuetag"
                    ),
                ),
            ],
            options={
                "verbose_name": "Organisation Behaviour Tag",
                "verbose_name_plural": "Organisation Behaviour Tags",
                "unique_together": {("organisation", "tag")},
            },
        ),
    ]
